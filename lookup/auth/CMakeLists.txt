cmake_minimum_required (VERSION 2.8)
project (AUTH_SERVICE)
   
include_directories(${CMAKE_CURRENT_BINARY_DIR})
PROTOBUF_GENERATE_CPP(HLV_PROTO_SRC HLV_PROTO_HDRS ${EV_LOOKUP_SOURCE_DIR}/../proto/service.proto)
include_directories(${EV_LOOKUP_UPDATE_LIB_SOURCE_DIR}/include)

find_package(OpenSSL)
if(OPENSSL_FOUND)
    include_directories(${OPENSSL_INCLUDE_DIR})
else()
    message(FATAL_ERROR "OpenSSL not found")
endif(OPENSSL_FOUND)

include_directories(${AUTH_SERVICE_SOURCE_DIR}/../common/include)
message(${PROTOBUF_LIBRARIES})
file(GLOB auth_service_sources . src/*.cc)
file(GLOB hlv_common_sources . ../../common/src/*.cc)
add_executable(auth_service ${HLV_PROTO_SRC} ${HLV_PROTO_HDRS} ${auth_service_sources} ${hlv_common_sources})
target_link_libraries(auth_service ${PROTOBUF_LIBRARIES})
target_link_libraries(auth_service ${Boost_LIBRARIES})
target_link_libraries(auth_service ${OPENSSL_LIBRARIES})
target_link_libraries(auth_service update_client) 
if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    find_package (Threads)
    target_link_libraries(auth_service ${CMAKE_THREAD_LIBS_INIT})
endif (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
