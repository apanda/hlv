cmake_minimum_required (VERSION 2.8)
project (HLV_PROXY)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${HLV_PROXY_SOURCE_DIR}/cmake_components")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Werror -stdlib=libc++ -std=c++11")
find_package(Boost 1.54 EXACT REQUIRED COMPONENTS log log_setup system program_options)
if (Boost_FOUND)
    message("boost found ${Boost_INCLUDE_DIRS} ${Boost_LIBRARIES}")
    include_directories(${Boost_INCLUDE_DIRS})
    add_definitions(-DBOOST_LOG_DYN_LINK)
else ()
    message(FATAL_ERROR "Boost 1.54 not found")
endif(Boost_FOUND)

find_package(Protobuf)
if(PROTOBUF_FOUND)
    include_directories(${PROTOBUF_INCLUDE_DIRS})
    include_directories(${CMAKE_BINARY_DIR})
    PROTOBUF_GENERATE_CPP(HLV_PROTO_SRC HLV_PROTO_HDRS ${HLV_PROXY_SOURCE_DIR}/../proto/service.proto)
else()
    message(FATAL_ERROR "Protobuf not found")
endif(PROTOBUF_FOUND)
include_directories(${HLV_PROXY_SOURCE_DIR}/../common/include)

find_package(ZeroMQ REQUIRED)
include_directories(${ZeroMQ_INCLUDE_DIR})

message(${PROTOBUF_LIBRARIES})
file(GLOB hlv_proxy_sources . src/*.cc)
file(GLOB hlv_common_sources . ../common/src/*.cc)
add_executable(hlv_proxy ${HLV_PROTO_SRC} ${HLV_PROTO_HDRS} ${hlv_proxy_sources} ${hlv_common_sources})
target_link_libraries(hlv_proxy ${PROTOBUF_LIBRARIES})
target_link_libraries(hlv_proxy ${Boost_LIBRARIES})
target_link_libraries(hlv_proxy ${ZeroMQ_LIBRARIES})
